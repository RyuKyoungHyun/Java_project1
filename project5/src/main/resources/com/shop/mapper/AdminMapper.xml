<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.AdminMapper">
	
	<!-- 상품 등록 -->
	<insert id="prodInsert">
	  	insert into product 
	  	values (#{prodNo},#{category}, #{brand},  #{prodName},#{costPrice}, #{netPrice}, #{salePrice}, #{prodMainImg}, #{prodImg1}, #{prodImg2}, #{prodImg3}, #{prodImg4}, #{detailImg}, #{prodInfo}, default, default, #{prodRest}, 0)
  	</insert>
  	
  	<!-- 상품 목록 불러오기 -->
  	<select id="getListProd" resultType="com.shop.domain.ProductVO">
  	select * from product
  	</select>
  	
   <!--상품 정보 읽어오기  -->
   <select id="readProd" resultType="com.shop.domain.ProductVO">
     select * from product where prodNo = #{prodNo}
   </select>
   
   <!-- 상품 정보 변경 셋팅 -->
   <update id="prodUpdate">
   	update product set
   	 brand = #{brand},
   	 category = #{category},
   	 prodName = #{prodName},
   	 prodInfo = #{prodInfo},
   	 netPrice = #{netPrice},
   	 salePrice = #{salePrice},
   	 prodMainImg = #{prodMainImg},
   	 detailImg = #{detailImg},
   	 prodImg1 = #{prodImg1},
   	 prodImg2 = #{prodImg2},
   	 prodImg3 = #{prodImg3},
   	 prodImg4 = #{prodImg4},
   	 prodUpdate = current_timestamp
   	 where prodNo = #{prodNo}
   </update>
   
   <!-- 상품 삭제하기 -->
   <delete id="prodRemove">
   delete from product where prodNo = #{prodNo}
   </delete>
   
  	
  	<!-- 브랜드,카테고리 부르기 -->
  	<select id="prodCodeInsert" resultType="com.shop.domain.CodeVO">
  		select * from code where codeId = "brand" or codeId = "category"
  	</select>
	
	<!-- 유저 리스트 -->
	<select id="getUsers" resultType="com.shop.domain.UsersVO">
		select * from users
	</select>
	<!-- 유저 정보 가져오기 -->
	<select id="getUserDetail" resultType="com.shop.domain.UsersVO">
		select * from users where userNo = #{userNo}
	</select>
	<!-- 유저 정보 수정 -->
	<update id="UpdateUserDetail">
		update users set nick = #{nick}, tel = #{tel}, phone = #{phone}, email = #{email}, zip = #{zip},  address = #{address}, admin= #{admin} where userNo = #{userNo}
	</update>
	<!-- 유저 권한 변경 -->
	<update id="adminChange">
		update users set admin = #{admin} where userNo =  #{userNo}
	</update>
	
	<!-- 유저 삭제 -->
	<delete parameterType="long" id="userDelete">
		delete from users where userNo = #{userNo}
	</delete>
	
	<!-- 게시판 조회 -->
	<select id="getBoard" resultType="com.shop.domain.BoardVO">
		select * from board where boardClass = #{boardClass}
	</select>
	
	<!-- 주문 목록 불러오기 -->
<resultMap id="orderInfoResult" type="com.shop.domain.OrderInfoVO">
    <id property="orderNo" column="orderNo"/>
    <result property="userNo" column="userNo"/>
    <result property="orderDate" column="orderDate"/>
    <result property="orderSum" column="orderSum"/>
    <result property="userPoint" column="userPoint"/>
    <result property="orderFee" column="orderFee"/>
    <result property="orderSta" column="orderSta"/>
    <!-- deliveryInfo로 변경 -->
    <association property="deliveryInfo" resultMap="deliveryResult"/>
    
    <!-- orderDetailList로 변경 -->
    <collection property="orderDetailList" resultMap="orderDetailResult"/>
    
</resultMap>

<resultMap id="orderDetailResult" type="com.shop.domain.OrderDetailVO">
    <id property="orderDtNo" column="orderDtNo"/>
    <result property="orderListNo" column="orderListNo"/>
    <result property="prodNo" column="prodNo"/>
    <result property="orderCnt" column="orderCnt"/>
    <result property="prodSum" column="prodSum"/>
    
    <!-- prodInfo로 변경 -->
    <association property="prodInfo" resultMap="productResult"/>
</resultMap>

<resultMap id="deliveryResult" type="com.shop.domain.DeliveryVO">
    <id property="deliNo" column="deliNo"/>
    <result property="orderNo" column="deliOrderNo"/>
    <result property="deliStart" column="deliStart"/>
    <result property="deliInfo" column="deliInfo"/>
    <result property="orderAddr" column="orderAddr"/>
    <result property="recipient" column="recipient"/>
    <result property="recipientTel" column="recipientTel"/>
</resultMap>

	<resultMap id="productResult" type="com.shop.domain.ProductVO">
    <id property="prodNo" column="prodNo"/>
    <result property="prodNo" column="prodNo"/>
    <result property="prodName" column="prodName"/>
    <result property="salePrice" column="salePrice"/>
	</resultMap>

<select id="orderList" resultMap="orderInfoResult, orderDetailResult, productResult, deliveryResult">
        SELECT 
        oi.orderNo,
        oi.userNo,
        oi.orderDate,
        oi.orderSum,
        oi.userPoint,
        oi.orderFee,
        oi.orderSta,
        od.orderListNo,
        od.prodNo,
        od.orderCnt,
        od.prodSum,
        d.deliNo,
        d.deliStart,
        d.deliInfo,
        d.orderAddr,
        d.recipient,
        d.recipientTel,
        p.prodName AS prodName,
        p.salePrice AS salePrice
    FROM order_info oi
    INNER JOIN order_detail od ON oi.orderNo = od.orderDtNo
    INNER JOIN delivery d ON oi.orderNo = d.orderNo
    INNER JOIN product p ON od.prodNo = p.prodNo;
</select>

<update id="deliInfo">
        UPDATE delivery d, order_info oi
        SET
        d.deliInfo = #{deliInfo},
        oi.orderSta = 3,
        d.deliStart = current_timestamp
        WHERE d.orderNo = oi.orderNo
        AND oi.orderNo = #{orderNo};
    </update>
    
    <select id="orderUnsetList" resultMap="orderInfoResult, orderDetailResult, productResult, deliveryResult">
        SELECT 
        oi.orderNo,
        oi.userNo,
        oi.orderDate,
        oi.orderSum,
        oi.userPoint,
        oi.orderFee,
        oi.orderSta,
        od.orderListNo,
        od.prodNo,
        od.orderCnt,
        od.prodSum,
        d.deliNo,
        d.deliStart,
        d.deliInfo,
        d.orderAddr,
        d.recipient,
        d.recipientTel,
        p.prodName AS prodName,
        p.salePrice AS salePrice
    FROM order_info oi
    INNER JOIN order_detail od ON oi.orderNo = od.orderDtNo
    INNER JOIN delivery d ON oi.orderNo = d.orderNo
    INNER JOIN product p ON od.prodNo = p.prodNo
    WHERE oi.orderSta = 0;
</select>

<select id="adminOrderDetail" resultMap="orderInfoResult, orderDetailResult, productResult, deliveryResult">
        SELECT 
        oi.orderNo,
        oi.userNo,
        oi.orderDate,
        oi.orderSum,
        oi.userPoint,
        oi.orderFee,
        oi.orderSta,
        od.orderListNo,
        od.prodNo,
        od.orderCnt,
        od.prodSum,
        d.deliNo,
        d.deliStart,
        d.deliInfo,
        d.orderAddr,
        d.recipient,
        d.recipientTel,
        p.prodName AS prodName,
        p.salePrice AS salePrice
    FROM order_info oi
    INNER JOIN order_detail od ON oi.orderNo = od.orderDtNo
    INNER JOIN delivery d ON oi.orderNo = d.orderNo
    INNER JOIN product p ON od.prodNo = p.prodNo
    WHERE oi.orderNo = #{orderNo}
</select>


	<!-- 질의게시판조회(답변여부 포함) -->
	<select id="getBoardQna" resultType="com.shop.domain.BoardVO">
		select b.*,a.boardNo as ansNo from board b left join answer a on b.boardNo = a.boardNo where boardClass = 2;
	</select>
	<!-- 게시글 조회 -->
	<select id="getBoardDetail" resultType="com.shop.domain.BoardVO">
		select * from board where boardNo = #{boardNo}
	</select>
	<!-- 공지 글쓰기 -->
	<insert id="notiWrite">
		insert into board
		values (default, #{userNo}, 1, #{boardTitle}, #{boardContent}, default, default, #{boardImg}, 0, null, null);
	</insert>
	<!-- 공지 수정 -->
	<update id="notiModify">
		update board set boardTitle=#{boardTitle}, boardContent=#{boardContent}, boardUpdate=default,boardImg=#{boardImg} where boardNo = #{boardNo}
	</update>
	<!-- 질의 답변 작성 -->
	<insert id="ansComplete">
		insert into answer
		values (#{boardNo}, #{ansTitle}, #{ansContent}, default)
	</insert>
	<!-- 답변 가져오기 -->
	<select id="getAnswer" resultType="com.shop.domain.AnswerVO">
		select * from answer where boardNo = #{boardNo}
	</select>
	<!-- 답변 수정하기 -->
	<update id="updateAnswer">
		update answer set ansTitle=#{ansTitle}, ansContent=#{ansContent} where boardNo = #{boardNo} 
	</update>
	<!-- 게시판 삭제 -->
	<delete id="boardDelete">
		delete from board where boardNo = #{boardNo};
	</delete>
	<!-- 게시판 리뷰보기 -->
	<select id="getBoardReview" resultType="com.shop.domain.BoardReplyVO">
		select * from board_reply where boardNo = #{boardNo}
	</select>
	<!-- 게시판 리뷰삭제 -->
	<delete id="boardReviwDelete">
		delete from board_reply where boRepNo = #{boRepNo}
	</delete>
	<!-- 신고 조회 -->
	<select id="getReport" resultType="com.shop.domain.ReportVO">
		select * from report order by processingYn
	</select>
	
	<!-- 신고 상세조회 -->
	<select id="reportBoard" resultType="com.shop.domain.BoardVO">
		select * from board where boardNo = #{boardNo}
	</select>
	<select id="reportBoRep" resultType="com.shop.domain.BoardReplyVO">
		select * from board_reply where boRepNo = #{boRepNo}
	</select>
	<select id="reportReviRep" resultType="com.shop.domain.ReviewReplyVO">
		select * from review_reply where reviRepNo = #{reviRepNo}
	</select>
	
	<!-- 신고 완료처리 -->
	<update id="reportComplete">
		update report set processingYn = 1 where repoNo = #{repoNo} ;
	</update>
	
	<!-- 매출정산 관리 -->
	<select id="getSalesInfo" resultType="com.shop.domain.SalesVO">
		select i.orderDate as salesDate ,sum(d.orderCnt) as salesAmount, (select count(orderNo) from order_info where orderDate = i.orderDate) as salesVolume, sum(d.prodSum) as salesPrice
		from order_info i left join order_detail d on i.orderNo = d.orderNo
		group by i.orderDate;
	</select>
	<!-- 가입자 조회 -->
	<select id="getJoinView" resultType="com.shop.domain.SalesVO">
		select date(regDate) as salesDate, count(regDate) as salesAmount from users group by date(regDate);
	</select>
	
</mapper>